description: "Deploy using Outblocks CLI."

parameters:
  env:
    type: string
    default: $OUTBLOCKS_ENV
    description: |
      Outblocks environment to use. Defaults to 'dev'.
  merge-mode:
    type: boolean
    default: false
    description: |
      Merge mode targets all apps that can be found (this is the same behavior as if all apps with visible app config were targeted manually).
  target-apps:
    type: string
    default: ""
    description: |
      Target only specified apps, specify in a form of <app type>.<name>, e.g.: static.website,service.api
  skip-apps:
    type: string
    default: ""
    description: |
      Skip specified apps (if they exist), specify in a form of <app type>.<name>, e.g.: static.website,service.api
  skip-all-apps:
    type: boolean
    default: false
    description: |
      Skip all apps (if they exist).
  skip-dns:
    type: boolean
    default: false
    description: |
      Skip DNS setup (including self managed certificates).
  skip-build:
    type: boolean
    default: false
    description: |
      Skip build command before deploy.
  set-vars:
    type: string
    default: ""
    description: |
      Set values, can specify multiple or separate values with commas: key1=val1,key2=val2.
  value-files:
    type: string
    default: ""
    description: |
      Specify values in a YAML file or a URL (can specify multiple) (default [<env>.values.yaml]).
  verify:
    type: boolean
    default: false
    description: |
      Verify existing resources before deploy.
  lock-wait:
    type: string
    default: 10m
    description: |
      How long should deployment try to acquire lock (if it is acquired by concurrent job). Defaults to '10m' (10 minutes).

steps:
  - run:
      name: Run Outblocks deployment
      command: |
        args=()

        if [[ -n "<<parameters.env>>" ]]; then
          args+=(--env "<<parameters.env>>")
        fi

        if [[ -n "<<parameters.value-files>>" ]]; then
          args+=(--values "<<parameters.value-files>>")
        fi

        if [[ -n "<<parameters.target-apps>>" ]]; then
          args+=(--target-apps "<<parameters.target-apps>>")
        fi

        if [[ -n "<<parameters.skip-apps>>" ]]; then
          args+=(--skip-apps "<<parameters.skip-apps>>")
        fi

        if [[ -n "<<parameters.lock-wait>>" ]]; then
          args+=(--lock-wait "<<parameters.lock-wait>>")
        fi

        ok deploy --yes ${args[@]} \
          --set "<<parameters.set-vars>>" \
          <<#parameters.skip-all-apps>>--skip-all-apps<</parameters.skip-all-apps>> \
          <<#parameters.skip-dns>>--skip-dns<</parameters.skip-dns>> \
          <<#parameters.skip-build>>--skip-build<</parameters.skip-build>> \
          <<#parameters.verify>>--verify<</parameters.verify>>
