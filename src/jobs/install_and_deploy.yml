description: Install Outblocks CLI and run deployment.

executor: <<parameters.executor>>

parameters:
  executor:
    type: executor
    default: machine
    description: >
      Executor to use for this job. Defaults to this machine executor.
  setup_gcp:
    default: false
    description: |
        Install and setup GCloud.
    type: boolean
  remote_docker_dlc:
    type: boolean
    default: false
    description: |
      Enable docker layer caching if using remote Docker engine.
      Defaults to false.
  remote_docker_version:
    default: "default"
    description: |
        Specify the remote docker version. See: https://circleci.com/docs/reference/configuration-reference/#setupremotedocker
    type: string
  setup_remote_docker:
    default: false
    description: |
        Setup and use CircleCI's remote Docker environment for Docker and docker-compose commands? Not required if using machine executor.
    type: boolean
  before_deploy:
    description: Steps that will be executed before deployment.
    type: steps
    default: []
  after_deploy:
    description: Steps that will be executed after deployment.
    type: steps
    default: []

  # Install parameters.
  version:
    type: string
    default: latest
    description: Version of the CLI to install.

  # Deploy parameters.
  env:
    type: string
    default: $OUTBLOCKS_ENV
    description: |
      Outblocks environment to use. Defaults to 'dev'.
  merge_mode:
    type: boolean
    default: false
    description: |
      Merge mode targets all apps that can be found (this is the same behavior as if all apps with visible app config were targeted manually).
  target_apps:
    type: string
    default: ""
    description: |
      Target only specified apps, specify in a form of <app type>.<name>, e.g.: static.website,service.api
  skip_apps:
    type: string
    default: ""
    description: |
      Skip specified apps (if they exist), specify in a form of <app type>.<name>, e.g.: static.website,service.api
  skip_all_apps:
    type: boolean
    default: false
    description: |
      Skip all apps (if they exist).
  skip_dns:
    type: boolean
    default: false
    description: |
      Skip DNS setup (including self managed certificates).
  skip_build:
    type: boolean
    default: false
    description: |
      Skip build command before deploy.
  skip_pull:
    type: boolean
    default: false
    description: |
      Skip docker images pull phase before deploy.
  set_vars:
    type: string
    default: ""
    description: |
      Set values, can specify multiple or separate values with commas: key1=val1,key2=val2.
  value_files:
    type: string
    default: ""
    description: |
      Specify values in a YAML file or a URL (can specify multiple) (default [<env>.values.yaml]).
  verify:
    type: boolean
    default: false
    description: |
      Verify existing resources before deploy.
  lock_wait:
    type: string
    default: 5m
    description: |
      How long should deployment try to acquire lock (if it is acquired by concurrent job). Defaults to '5m' (5 minutes).
  no_output_timeout:
    type: string
    default: "20m"
    description: |
      Time limit for no output to be produced before terminating the job. Defaults to '20m' (20 minutes).

steps:
  - checkout
  - install:
      version: <<parameters.version>>
  - run:
      name: Setup Outblocks env vars
      command: |
        echo 'export OUTBLOCKS_ENV="<<parameters.env>>"' >> $BASH_ENV
  - when:
      condition: <<parameters.setup_gcp>>
      steps:
        - gcp-cli/install
        - run:
            name: Initialize GCP access
            command: |
              # Store service account
              echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
              echo "export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json" >> $BASH_ENV

              # Initialize gcloud CLI
              gcloud --quiet config set core/disable_usage_reporting true
              gcloud --quiet config set component_manager/disable_update_check true
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        - run:
            name: Authenticate docker with GCP access
            command: |
              mkdir -p "$HOME/.docker"
              gcloud auth configure-docker --quiet
  - when:
      condition: <<parameters.setup_remote_docker>>
      steps:
          - setup_remote_docker:
              docker_layer_caching: <<parameters.remote_docker_dlc>>
              version: <<parameters.remote_docker_version>>
  - steps: << parameters.before_deploy >>

  - deploy:
      env: <<parameters.env>>
      merge_mode: <<parameters.merge_mode>>
      target_apps: <<parameters.target_apps>>
      skip_apps: <<parameters.skip_apps>>
      skip_all_apps: <<parameters.skip_all_apps>>
      skip_dns: <<parameters.skip_dns>>
      skip_build: <<parameters.skip_build>>
      skip_pull: <<parameters.skip_pull>>
      set_vars: <<parameters.set_vars>>
      value_files: <<parameters.value_files>>
      verify: <<parameters.verify>>
      lock_wait: <<parameters.lock_wait>>

  - steps: << parameters.after_deploy >>
